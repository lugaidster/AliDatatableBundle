{% block main %}
{% if multiple %}
<form name="frm-{{id}}">
{% endif %}
    <table class="display table table-bordered" id="{{id}}">
        <thead>
            <tr>
            {% if multiple %}
                <th width="1%" ><input type="checkbox" name="datatable_action_all" /></th>
            {% endif %}
            {% for label,key in fields %}
                {% if label != '_identifier_' %}
                    <th>{{ label }}</th>
                {% endif %}
            {% endfor %}
            {% if action %}
                <th width="1%">{{ 'ali.common.action'|trans()  }}</th>
            {% endif %}
            </tr>
        </thead>
        {% if search_local %}
        {% set i = 0 %}
        <tfoot class="{{search}}">
            <tr>
                {% if multiple %}
                <th></th>
                {% endif %}
                {% for label,key in fields %}
                    {% if label != '_identifier_' %}
                        {% if search_fields is not empty %}
                            {% if i in search_fields %}
                            <td><input index="{{i}}" searchable="true" type="text" placeholder="{{ 'ali.common.search'|trans() }}" class="search_init" /></td>
                            {% else %}
                            <td></td>
                            {% endif %}
                        {% else %}
                        <td><input index="{{i}}" searchable="true" type="text" placeholder="{{ 'ali.common.search'|trans() }}" class="search_init" /></td>
                        {% endif %}
                    {% elseif label == '_identifier_'and action and not action_twig %}
                        <td></td>
                    {% endif %}
                    {% set i = i+1 %}
                {% endfor %}
            </tr>
        </tfoot>
        {% endif %}
    </table>
{% if multiple %}
</form>
{% endif %}
<script type="text/javascript">
    function getId() { return "{{id}}"; };
    function getWrapper() { return  "#{{id}}_wrapper"; };
    var s = getWrapper();
    var multiple = {% if multiple %} true {% else %} false {% endif %};
    var multiple_rawhtml = '';
    {% if multiple %}
        var multiple_rawhtml = '\
            <label style="margin-right: 10px">\
                <div class="btn-group">\
                    {% for key,item in multiple %}\
                     <button class="{{item.class|default('')}} btn-datatable-multiple" data-action="{{ path(item.route) }}" data-loading-text="Loading...">{{item.title}}</button>\
                    {% endfor %}\
                </div>\
            </label>\
        ';
    {% endif %}
    var $js_conf = {{ js_conf | raw }};
    var $js = {};
    for(key in $js_conf) {
        if ($js_conf.hasOwnProperty(key)) {
            eval ( ' $js["'+key+'"] = ' + $js_conf[key]+ ' ; ' );
        }
    }
    var $options = {{ js | raw }};
    var $aoColumnDefs = new Array();
    {% if multiple %}
    $aoColumnDefs.push({ 'bSortable': false, 'aTargets': [ 0 ] });
    {% endif %}
    {% if action and not action_twig %}
    $aoColumnDefs.push({
        "fnRender": function ( oObj ) {
            var $edit_url = strtr(
                "{{ path(edit_route , { 'id': "xx" }) }}",
                { "xx": oObj.aData[{{fields|length}}-1] }
            );
            var $link_edit = "<a  style='float:right; margin-right:10px' class='dialog' title='edit'";
            $link_edit += "href='"+$edit_url+"'>";
            $link_edit += "{{ 'ali.common.edit'|trans()}}</a>";
            var $delete_url = strtr(
                "{{ path(delete_route, { 'id': "xx" }) }}",
                { "xx": oObj.aData[{{fields|length}}-1] }
            );
            var $link_delete = "<form style='float:right' class='form' action='"+$delete_url+"' method='post'>";
            $link_delete += strtr(
                                '{{ form_widget(delete_form) }}',
                                { "_id_": oObj.aData[{{fields|length}}-1] }
                            );
            $link_delete += "<a class='button-delete' href='#' type='submit'>{{ 'ali.common.delete'|trans() }}</a>";
            $link_delete += " </form>";
            var $out = $link_delete+ " " + $link_edit ;
            if (oObj.aData[{{fields|length}}-1] == null )
            {
                $out = "<div style='float:right'>{{ 'ali.common.no_action'|trans() }}</div>";
            }
            return $out
        },
        "aTargets": [ multiple ? {{fields|length}} : ({{fields|length}} - 1)  ]
    });
    {% elseif action and action_twig %}
    $aoColumnDefs.push({
        'bSortable': false,
        "aTargets": [ multiple ? {{fields|length}} : ({{fields|length}} - 1)  ]
    });
    {% endif %}
    var $defaults = {
        "aLengthMenu": [[5,10, 25, 50, -1], [5,10, 25, 50, "All"]],
        "iDisplayLength": 10,
        "bServerSide": true,
        "bProcessing": true,
        "sAjaxSource": null,
        "bPaginate": true,
        "bLengthChange": true,
        "aoColumnDefs": $aoColumnDefs,
        "bSort": true,
        "bFilter": {% if search_global or search_local %} true {% else %} false {% endif %},
        {% if sort_column is defined and sort_column %}
        "aaSorting": [[ {{ sort_column }}, '{{ sort_direction }}']],
        {% endif %}
        "oLanguage": {
            "sProcessing":     '{{ 'ali.common.sProcessing' | trans() }}',
            "sLengthMenu":     '{{ 'ali.common.sLengthMenu' | trans() }}',
            "sZeroRecords":    '{{ 'ali.common.sZeroRecords' | trans() }}',
            "sInfo":           '{{ 'ali.common.sInfo' | trans() }}',
            "sInfoEmpty":      '{{ 'ali.common.sInfoEmpty' | trans() }}',
            "sInfoFiltered":   '{{ 'ali.common.sInfoFiltered' | trans() }}',
            "sInfoPostFix":    '{{ 'ali.common.sInfoPostFix' | trans() }}',
            "sLoadingRecords": '{{ 'ali.common.sLoadingRecords' | trans() }}',
            "sUrl":            "",
            "oPaginate": {
                "sFirst":    '{{ 'ali.common.sFirst' | trans() }}',
                "sPrevious": '{{ 'ali.common.sPrevious' | trans() }}',
                "sNext":     '{{ 'ali.common.sNext' | trans() }}',
                "sLast":     '{{ 'ali.common.sLast' | trans() }}'
            }
        },
        "bAutoWidth" : false
    };
    $.extend($defaults,$js);
    $.extend($defaults,$options);
    $('#{{id}}').trigger('datatables_init', $defaults );
    eval("var "+ "oTable_"+'{{id}}'.split('-').join('_') + "  = $('#{{id}}').dataTable($defaults)");
    $(s).on('click','.button-delete',function(e){
        var $this = $(this);

        bootbox.confirm('{{ 'ali.common.confirm_delete'|trans()  }}', function(result){
            if(!result)
                return;

            var action = $this.data('action');
            var form = $this.data('form');

            $.post(action, form).done(function(){
                $.pnotify({
                    title: 'Success',
                    text: 'The deletion was successful',
                    type: 'success'
                });
                $('#{{id}}').dataTable().fnDeleteRow($this.closest('tr')[0]);
            }).fail(function(){
                $.pnotify({
                    title: 'Error',
                    text: 'An error occurred during deletion',
                    type: 'error'
                });
            });
        });
    });

    if (multiple===true) {
        if($('.dataTables_multiple',$(s)).length==0){
            $(s+' .dataTables_length').prepend(multiple_rawhtml);
        }
        var chbox =  'input:checkbox[name="dataTables[actions][]"]';
        var chbox_all = 'input:checkbox[name="datatable_action_all"]';
        $(s).on('click','.btn-datatable-multiple:not(.search_init)',function(e){
            var $btn = $(this);
            var notify = null;
            if($('input:focus',$(s)).length > 0){
                return false;
            }
            e.preventDefault();
            if($(chbox+':checked').length > 0){
                var $this = $(this);
                bootbox.confirm('Are you sure?', function(result){
                    if(!result)
                        return;

                    var form = $this.parents('form:eq(0)');
                    var action = $btn.data('action');
                    $.ajax({
                        type: "POST",
                        url: action,
                        data: form.serialize(),
                        dataType: 'json',
                        success: function(data) {
                            $('#'+getId()).dataTable().fnDraw();
                            $btn.button('reset');
                            notify.pnotify({
                                title: data.title,
                                text: data.text,
                                hide: true,
                                type: data.type
                            });
                        },
                        beforeSend: function() {
                            $btn.button('loading');
                            notify = $.pnotify({
                                title: 'Please wait',
                                text: 'Operation in progress...',
                                hide: false
                            });
                        }
                    });
                });
            } else {
                bootbox.alert('You need to select at least one element.');
            }
        });
        $(s).on('click',chbox_all,function(e){
            if($(this).is(':checked')) {
                $(chbox,$(s)).prop("checked",false).click();
            } else {
                $(chbox,$(s)).prop("checked",true).click();
            }
        });
    }

    {% if search_global %}
    // SEARCH - Add the placeholder for Search and Turn this into in-line form control
    var search_input = $('#{{id}}').closest('.dataTables_wrapper').find('div[id$=_filter] input');
    search_input.attr('placeholder', 'Search');
    search_input.addClass('form-control input-sm');
    {% endif %}

    {% if search_local %}
    {% if not search_global %}$(".dataTables_filter").remove();{% endif %}
    var search_selector = "#{{id}} input[searchable=true]";
    $(search_selector).keypress( function (event) {
        var index = $(this).attr('index');
        var oTable = eval('oTable_{{id}}'.split('-').join('_'));
        if (event.keyCode == '13') {
            oTable.fnFilter(
                this.value,
                oTable.oApi._fnVisibleToColumnIndex(
                    oTable.fnSettings(),
                    index
                )
            );
        }
    }).each( function (i) {
        this.initVal = this.value;
    }).focus( function () {
        if ( this.className == "search_init" ){
            this.className = "";
            this.value = "";
        }
    }).blur( function (i) {
        if ( this.value == "" ){
            this.className = "search_init";
            this.value = this.initVal;
        }
    });
    {% endif %}
    // LENGTH - Inline-Form control
    var length_sel = $('#{{id}}').closest('.dataTables_wrapper').find('div[id$=_length] select');
    length_sel.addClass('form-control input-sm');
</script>
{% endblock  %}
